While doing first two milestones of the second assignment, I learned how to create and use functions' prototypes, how to declare a function itself. Basically, there are two main types of functions: standard library and user defined. To use standard library functions the appropriate library file should be included in the source core file. 

In this particular assignment, only the stdio.h library was included. And another type of functions, user-defined functions, was used to declare some functions to clear the input buffer, to accept an integer and return the value of it, get an integer in the range, which is defined by the accepted parameters, to ask the user yes or no questions, and others. Also, functions can be of an int, char, float, double or void type, and they can work with or without accepting parameters.

The most troublesome part for me in this assignment was utilizing declared functions in contacts.c file. What is more, there were no comments for it, which made it extra hard and the only thing I could rely on was the output.


1.Function is a block of code that has some set of instructions to perform a specific task. Functions are good for working on a project modularly. So, if you make a function prototype, you can use it anywhere throughout the project, and your colleagues can use them as well, if you work in a group. For example, in the milestone 1 I have declared functions in contactHelpers.c file, which were subsequently used in a2ms2.c and contacts.c files. But if I declared the functions in contacts.c file, I would have to declare them in a2ms2.c file as well, which would result in irrational code and use of functions.

2.To create cohesive modules, each module has to perform particular tasks that are related to each other. However, since contacts.c functions are not connected to those within the helper, they are declared apart from each other to make them independent from one another. So, getName, getAddress, getNumbers, and getContact functions have similar tasks, and therefore they are declared together, but the funcitons in contactHelpers.c are not related to them, therefore they should not be declared in one file. In addition to that, a good module should have a readable amount of code, but by mixing all the functions together, it would make it hard to read the code.
